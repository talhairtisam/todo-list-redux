{"version":3,"sources":["redux/actionType.js","redux/actions.js","components/AddTodos.js","components/Filter.js","components/Todo.js","components/Todos.js","App.js","redux/reducer.js","index.js"],"names":["actionType","DisplayAction","type","connect","dispatch","addTodo","text","payload","AddTodoAction","Display","useState","setText","className","value","onChange","e","target","name","placeholder","onClick","filter","completeToggle","id","CompletedTodoAction","deleteTask","DeleteTodoAction","todo","completed","state","todos","filterTodo","map","App","INITIAL_STATE","Todo","Middleware","logger","store","createStore","action","Math","random","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59f8a6ef.chunk.js","sourcesContent":["export const actionType = {\r\n    ADD: \"ADD\",\r\n    COMPLETED: \"COMPLETED\",\r\n    DELETE: \"DELETE\",\r\n    FILTER: \"CHANGE_FILTER\",\r\n    DISPLAY: \"DISPLAY\"\r\n\r\n}\r\n","import { actionType } from './actionType';\r\n\r\nexport const changeFilter = (temp) =>{\r\n    return {\r\n        type: actionType.FILTER,\r\n        payload: temp\r\n    }\r\n}\r\n\r\nexport const AddTodoAction = (text) =>{\r\n    return {\r\n        type: actionType.ADD,\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport const DeleteTodoAction = (id) => {\r\n    return {\r\n        type: actionType.DELETE,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const CompletedTodoAction = (id) => {\r\n    return {\r\n        type: actionType.COMPLETED,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const DisplayAction = () => {\r\n    return {\r\n        type: actionType.DISPLAY\r\n    }\r\n}\r\n\r\n\r\n","import React,{ useState } from 'react';\r\nimport { AddTodoAction,DisplayAction } from '../redux/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction AddTodos({addTodo,Display}){\r\n    const [text,setText] = useState(\"\"); \r\n    const handleInput =(e) =>{\r\n        setText(e.target.value);\r\n    }\r\n    return (\r\n        <div className='AddTodos'>\r\n            <input value={text} type=\"text\" onChange={handleInput} name=\"newTask\" placeholder=\"New Task\" className=\"newTaskText\" />\r\n                <button \r\n                className=\"addBtn\"\r\n                onClick={() => {\r\n                    addTodo(text);\r\n                    setText(\"\");\r\n                    Display();\r\n                }}\r\n                >\r\n                    <i className=\"fas fa-plus-square fa-lg \"></i>\r\n                </button>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addTodo: (text) => dispatch(AddTodoAction(text)),\r\n        Display: () => dispatch(DisplayAction())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(AddTodos);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter,DisplayAction  } from '../redux/actions';\r\n\r\nfunction Filter({ filter,Display }){\r\n    return (\r\n        <div className='Filter'>\r\n            <select \r\n            className=\"filterSelection\"\r\n            onChange={(e)=>{\r\n                    filter(e.target.value);\r\n                    Display();\r\n                }\r\n            }\r\n            >\r\n                <option \r\n                value=\"ALL\"\r\n                >ALL</option>\r\n                <option \r\n                value=\"COMPLETED\"\r\n                >COMPLETED</option>\r\n                <option \r\n                value=\"PENDING\"\r\n                >PENDING</option>\r\n                \r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        filter: (e) => dispatch(changeFilter(e)),\r\n        Display: () => dispatch(DisplayAction())\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Filter);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CompletedTodoAction,DeleteTodoAction,DisplayAction } from '../redux/actions';\r\n\r\nfunction Todo({ todo,completeToggle,deleteTask,Display }){\r\n    return (\r\n        <div className='Todo'>\r\n            <li className={`taskText ${todo.completed ? \"completed\" : \"\" }`}>{todo.text}</li>\r\n            <button \r\n            className=\"checkBtn\"\r\n            onClick={()=>{\r\n                completeToggle(todo.id);\r\n                Display();\r\n            }}\r\n            >\r\n                <i className=\"fas fa-check fa-lg \"></i>\r\n            </button>\r\n            <button \r\n            className=\"trashBtn\"\r\n            onClick={()=>{\r\n                deleteTask(todo.id);\r\n                Display();\r\n            }}\r\n            >\r\n                <i className=\"fas fa-trash fa-lg \"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        completeToggle:(id) => dispatch(CompletedTodoAction(id)),\r\n        deleteTask: (id) => dispatch(DeleteTodoAction(id)),\r\n        Display: () => dispatch(DisplayAction())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(Todo);","import React from 'react';\r\nimport Todo from './Todo';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nfunction Todos({todos}){\r\n    return (\r\n        <div className='Todos'>\r\n            <ul>\r\n                {\r\n                    todos.map((todo)=>(\r\n                        <Todo key={todo.id} todo={todo} />\r\n                    ))\r\n                }\r\n            </ul>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStatesToProps = (state) => {\r\n    return {\r\n        todos: state.filterTodo\r\n    }\r\n}\r\n\r\nexport default connect(mapStatesToProps)(Todos);","import './App.css';\nimport AddTodos from './components/AddTodos';\nimport Filter from './components/Filter';\n\nimport Todos from './components/Todos';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <div className=\"forum\">\n        <AddTodos />\n        <Filter />\n      </div>\n      <Todos />\n        \n    </div>\n  );\n}\n\nexport default App;\n","import { actionType } from \"./actionType\";\r\n\r\nconst INITIAL_STATE = {\r\n    Todo: [],\r\n    filterTodo: [],\r\n    filter: \"ALL\"\r\n}\r\n\r\n\r\n\r\nexport const todoReducer = (state=INITIAL_STATE,action) => {\r\n    switch(action.type){\r\n        case actionType.ADD:\r\n            return {\r\n                ...state,\r\n                Todo:[\r\n                    ...state.Todo,\r\n                    {text: action.payload, completed: false, id: Math.random()*1000 }\r\n                ]\r\n            }\r\n        case actionType.DELETE:\r\n            return {\r\n                ...state,\r\n                Todo:state.Todo.filter((todo) => todo.id !== action.payload)\r\n            }\r\n        case actionType.COMPLETED:\r\n            return {\r\n                ...state,\r\n                Todo:state.Todo.map((todo)=>{\r\n                        if(todo.id === action.payload)\r\n                        {\r\n                            return {\r\n                                ...todo, completed: !todo.completed\r\n                            }\r\n                        }\r\n                        return todo\r\n                    })\r\n            }\r\n        case actionType.FILTER:\r\n            return{\r\n                ...state,\r\n                filter: action.payload\r\n            }\r\n        case actionType.DISPLAY:\r\n            switch(state.filter){\r\n                case \"COMPLETED\":\r\n                    return{\r\n                        ...state,\r\n                        filterTodo: state.Todo.filter(todo => todo.completed === true)\r\n                    }\r\n                case \"PENDING\":\r\n                    return {\r\n                        ...state,\r\n                        filterTodo: state.Todo.filter(todo => todo.completed === false)\r\n                    }\r\n                default:\r\n                    return {\r\n                        ...state,\r\n                        filterTodo: state.Todo\r\n                    }\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport {  createStore, applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport { todoReducer } from './redux/reducer';\n\n\n\nconst Middleware = [logger];\n\n\nconst store = createStore(todoReducer,applyMiddleware(...Middleware))\n\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}